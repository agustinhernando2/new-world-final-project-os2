package server

import (
	// "fmt"
	"log"

	"github.com/ICOMP-UNC/newworld-agustinhernando2/cmd/controllers"
	"github.com/ICOMP-UNC/newworld-agustinhernando2/cmd/server"
	"github.com/ICOMP-UNC/newworld-agustinhernando2/internal/repositories"
	"github.com/ICOMP-UNC/newworld-agustinhernando2/internal/services"

	// "github.com/gofiber/contrib/swagger"
	"github.com/gofiber/fiber/v2"

	_ "github.com/ICOMP-UNC/newworld-agustinhernando2/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Fiber Example API
// @version 1.0
// @description This is a sample Swagger for Fiber
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email fiber@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:3000
// @BasePath /
func main() {

	port := server.GetEnvValue("PORT", "3000")
	/*
		DB_USER=agustinhernando
		DB_PASSWORD=agustinhernando
		DB_NAME=agustinhernando
		PORT=3000
	*/
	db_pass := server.GetEnvValue("DB_PASSWORD", "1234")
	db_user := server.GetEnvValue("DB_USER", "agustinhernando")
	db_name := server.GetEnvValue("DB_NAME", "agustinhernando")

	db := server.ConnectDatabase(db_pass, db_user, db_name)
	// Auto migrar modelos

	// Inicializar repositorios
	userRepo := repositories.NewUserRepository(db)
	itemRepo := repositories.NewItemRepository(db)
	orderRepo := repositories.NewOrderRepository(db)

	// Inicializar servicios
	authService := services.NewAuthService(userRepo, itemRepo, orderRepo)
	adminService := services.NewAdminService(orderRepo)

	// Inicializar controladores
	authController := controllers.NewAuthController(authService)
	adminController := controllers.NewAdminController(adminService)

	// Configurar Fiber
	app := fiber.New()

	// Rutas de autenticaci√≥n
	salesGroup := app.Group("/auth")
	salesGroup.Post("/register", authController.RegisterUser)
	salesGroup.Post("/login", authController.LoginUser)
	salesGroup.Get("/offers", authController.GetOffers)
	salesGroup.Post("/checkout", authController.CheckoutOrders)
	salesGroup.Get("/orders/:id", authController.GetOrderStatus)

	// Rutas de administrador
	adminGroup := app.Group("/admin")
	adminGroup.Get("/dashboard", adminController.GetDashboard)
	adminGroup.Patch("/orders/:id", adminController.UpdateOrderStatus)

	// Iniciar el servidor
	// Swagger documentation
	// app.Use(swagger.New(swagger.Config{
	// 	BasePath: "/swagger",
	// 	FilePath: "./docs/swagger.json",
	// 	Path:     "docs",
	// }))

	// Start server
	log.Printf("Starting server on port %s...", port)
	if err := app.Listen(":" + port); err != nil {
		log.Fatalf("Failed to start server: %v", err)
	}

	// Missing graceful shutdown
}
